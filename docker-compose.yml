version: '3.9'

services:
  localstack:
    image: localstack/localstack:latest
    environment:
      - AWS_DEFAULT_REGION=us-east-1
      - EDGE_PORT=4566
      - SERVICES=s3
    ports:
      - '4566-4583:4566-4583'
      - '8055:8080'
    volumes:
      - "${TEMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test:
        [
            "CMD",
            "node",
            "-e",
            "http.request({host: 'localhost', port: '4566'}).end()"
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  db:
    image: postgres:14-alpine
    user: postgres
    environment:
      - POSTGRES_DB=metastore
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
    ports:
      - "5437:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 3

  metastore:
    build: metastore
    depends_on:
      db:
        condition: service_healthy
    ports:
        - "9083:9083"
    healthcheck:
      test:
        [
            "CMD",
            "node",
            "-e",
            "http.request({host: 'localhost', port: '9083'}).end()"
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  spark:
    image: docker.io/bitnami/spark:3
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8090:8080'
    depends_on:
      metastore:
        condition: service_healthy
  spark-worker:
    image: docker.io/bitnami/spark:3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark

#  presto-coordinator:
#    image: ahanaio/prestodb-sandbox
#    ports:
#    - "8082:8080"
#    volumes:
#      - ${PWD}/presto/coordinator/etc/config.properties:/opt/presto-serveretc/config.properties
#      - ${PWD}/presto/coordinator/etc/catalog/hive.properties:/opt/presto-server/etc/catalog/hive.properties
#    depends_on:
#      - db
#
#  presto-worker:
#    image: ahanaio/prestodb-sandbox
#    ports:
#    - "8083:8080"
#    volumes:
#      - ./presto/worker/etc/config.properties:/opt/presto-server/etc/config.properties
#
#    depends_on:
#      - db
